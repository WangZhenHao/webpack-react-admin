{"version":3,"file":"static/js/695.9941f0f9.chunk.js","mappings":"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","sources":["webpack://webapck-react-admin/./src/views/home/component/component.module.scss?3743","views/home/component/hearder.tsx","components/global/Icon/index.tsx","assets/js/utils/createTree.ts","views/home/component/siderbar.tsx","views/home/component/tags.tsx","views/home/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"headerWrap\":\"component_headerWrap__DBCwf\",\"leftWrap\":\"component_leftWrap__tjlwY\",\"rightwrap\":\"component_rightwrap__Z15br\",\"imgblock\":\"component_imgblock__FgB23\",\"silderWrap\":\"component_silderWrap__8LFPk\",\"with80\":\"component_with80__vPi8y\",\"iconArrow\":\"component_iconArrow__rnDVC\",\"tagWrap\":\"component_tagWrap__K5rFN\",\"tagActive\":\"component_tagActive__jEYos\",\"contentWrap\":\"component_contentWrap__dgkm6\",\"Content\":\"component_Content__+1Zrn\"};","import { DownOutlined } from \"@ant-design/icons\";\nimport type { MenuProps } from \"antd\";\nimport { Dropdown, Modal } from \"antd\";\nimport admin from \"@img/admin.png\";\n\nimport style from \"./component.module.scss\";\nimport { loginOut } from '@store/user'\nimport { useAppDispatch } from '@store/hooks'\n// import {  useDispatch } from \"react-redux\"\n\n\nexport default function App() {\n    const dispatch = useAppDispatch()\n    const loginOutHandle = () => {\n        Modal.confirm({\n            okText: '确定',\n            cancelText: '取消',\n            okType: 'danger',\n            title: '确定退出登录嘛？',\n            onOk() {\n                dispatch(loginOut())\n            }\n        })\n        \n    }\n    const items: MenuProps[\"items\"] = [\n        {\n            key: '1',\n            label: (\n                <span className=\"text-center\" onClick={loginOutHandle}>退出登录</span>\n            )\n        }\n    ];\n\n    return (\n        <>\n            <div\n                className={`${style.headerWrap} flex justify-between items-center`}\n            >\n                <div className={style.leftWrap}>React版本-后台管理系统</div>\n                <div className={style.rightwrap}>\n                    <Dropdown menu={{ items }}>\n                        <div className=\"flex items-center text-14px text-color-f\">\n                            <img\n                                className={style.imgblock}\n                                src={admin}\n                                alt=\"头像\"\n                            />\n                            <span className=\"pl-6px pr-4px\">管理员</span>\n                            <DownOutlined className=\"text-12px\" />\n                        </div>\n                    </Dropdown>\n                </div>\n            </div>\n        </>\n    );\n}\n","\nimport * as AllIcon from \"@ant-design/icons\"\nimport React from \"react\";\n\nexport default function Icon(props: { icon: string, className?: string }) {\n    const { icon, className } = props;\n    const antIcon: { [key: string]: any } = AllIcon;\n\n    return React.createElement(antIcon[icon], { className });\n}","interface typeTree {\n    parentId?: string;\n    id: string;\n    child?: any[];\n    sort?: any;\n}\nexport function toMakeTree<T extends typeTree>(data: T[], pid: string): T[] {\n    let arr = [];\n    pid = pid || '0';\n    for (let item of data) {\n        if (item.parentId === pid) {\n            let child = toMakeTree(data, item.id);\n            if (child.length > 0) {\n                item['child'] = child;\n            }\n            arr.push(item);\n        }\n    }\n\n    return listSort(arr, 'sort', 'child');\n}\n\nexport function listSort<T>(\n    arr: T[],\n    sortName: keyof T,\n    childName: keyof T\n): T[] {\n    let tem = null,\n        len = arr.length;\n    for (let i = 0; i < len; i++) {\n        const item = arr[i][childName] as T[];\n        if (item && item.length) {\n            listSort(item, sortName, childName);\n        }\n        for (let j = 0; j < len - 1; j++) {\n            if (arr[j][sortName] > arr[j + 1][sortName]) {\n                tem = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = tem;\n            }\n        }\n    }\n    return arr;\n}\n","// import {\n//     LeftOutlined,\n//     RightOutlined,\n// } from \"@ant-design/icons\";\n\n// import * as AllIcon from \"@ant-design/icons\"\nimport Icon from '@/components/global/Icon'\n\nimport style from \"./component.module.scss\";\nimport type { MenuProps } from \"antd\";\nimport { Menu } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { selectUserInfo } from \"@store/user\";\nimport { useAppSelector } from \"@store/hooks\";\nimport { toMakeTree } from '@js/utils/createTree'\nimport { useNavigate, useLocation } from \"react-router-dom\";\n// const { Sider } = Layout;\n\ntype MenuItem = Required<MenuProps>[\"items\"][number];\n// function getItem(\n//     label: React.ReactNode,\n//     key: React.Key,\n//     icon?: React.ReactNode,\n//     children?: MenuItem[]\n// ): MenuItem {\n//     return {\n//         key,\n//         icon,\n//         children,\n//         label,\n//     } as MenuItem;\n// }\n\nfunction filterTreeList(list: any): any {\n    const json = []\n    for(let item of list) {\n        // const a = item.icon as keyof typeof AllIcon\n        // const Compoent = AllIcon[a]\n        const detial = {\n            label: item.name, \n            key: item.path ? item.path : item.name, \n            icon: item.icon ? <Icon icon={item.icon} /> : '',\n            children: null\n        }\n        \n\n        if(item.child && item.child.length) {\n            const children = filterTreeList(item.child)\n\n            detial.children = children\n        }\n        json.push(detial)\n    }\n\n    return json;\n}\n\nfunction findOpenKey(path: string, list: any, parenList?: any) {\n    let openKeys = ''\n    \n    for(let item of list) {\n\n        if(item.children && item.children.length) {\n            openKeys =  findOpenKey(path, item.children, item)\n            return openKeys;\n        } \n\n        if(item.key === path) {\n            return parenList ? parenList.key : item.key\n\n        }\n    }\n    return openKeys;\n}\n\nexport default function App() {\n    const userInfo = useAppSelector(selectUserInfo);\n    const href = useLocation();\n\n    const navigate = useNavigate();\n\n    const [selectedKeys, setSelectedKeys] = useState<string[]>([href.pathname]);\n    // console.log(selectedKeys, href.pathname);\n    const treeList = toMakeTree(JSON.parse(JSON.stringify(userInfo?.list!)), '0')\n    \n    // if(selectedKeys[0] !== href.pathname) {\n    //     setSelectedKeys([href.pathname])\n    // }\n    // console.log(filterTreeList(treeList), treeList);\n    // const items: MenuItem[] = [\n    //     getItem(\"Option 1\", \"1\", <PieChartOutlined />),\n    //     getItem(\"Option 2\", \"2\", <DesktopOutlined />),\n    //     getItem(\"User\", \"sub1\", <UserOutlined />, [\n    //         getItem(\"Tom\", \"3\"),\n    //         getItem(\"Bill\", \"4\"),\n    //         getItem(\"Alex\", \"5\"),\n    //     ]),\n    //     getItem(\"Team\", \"sub2\", <TeamOutlined />, [\n    //         getItem(\"Team 1\", \"6\"),\n    //         getItem(\"Team 2\", \"8\"),\n    //     ]),\n    //     getItem(\"Files\", \"9\", <FileOutlined />),\n    // ];\n    const items = filterTreeList(treeList) as MenuItem[]\n\n    const [openKeys] = useState<string[]>([findOpenKey(href.pathname, items)]);\n    const [collapsed, setCollapsed] = useState(false);\n\n    const toggleCollapsed = () => {\n        setCollapsed(!collapsed);\n    };\n\n\n    const menuClick: MenuProps['onSelect'] = (e) => {\n        // console.log(e);\n        navigate(e.key)\n        setSelectedKeys([e.key])\n    };\n\n    \n    return (\n        <>\n            <div\n                className={`${style.silderWrap} relative  ${\n                    collapsed ? style.with80 : \"\"\n                } `}\n            >\n                <Menu\n                    inlineCollapsed={collapsed}\n                    theme=\"dark\"\n                    mode=\"inline\"\n                    items={items}\n                    onSelect={menuClick}\n                    defaultSelectedKeys={selectedKeys}\n                    defaultOpenKeys={openKeys}\n\n                />\n                <div\n                    className={`${style.iconArrow} text-color-f absolute`}\n                    onClick={toggleCollapsed}\n                >\n                    {collapsed ? (\n                        // <LeftOutlined className=\"text-14px\" />\n                        <Icon icon=\"LeftOutlined\" className='text-14px' />\n                    ) : (\n                        <Icon icon=\"RightOutlined\" className='text-14px' />\n                        // <RightOutlined className=\"text-14px\" />\n                    )}\n                </div>\n            </div>\n            \n        </>\n    );\n}\n","import style from \"./component.module.scss\";\nimport { Tag } from \"antd\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { selectUserInfo } from \"@store/user\";\nimport { useAppSelector } from \"@store/hooks\";\nimport { useState, useEffect } from \"react\";\n\nexport default function App() {\n    const userInfo = useAppSelector(selectUserInfo);\n    const [breadcrumbList, setBreadcrumbList] = useState<$api.user.menuList[]>(\n        []\n    );\n    const href = useLocation();\n    const navigate = useNavigate();\n\n    function List() {\n        useEffect(() => {\n            const item = userInfo?.list?.find(\n                (item) => item.path === href.pathname\n            );\n\n            if (\n                item &&\n                breadcrumbList.findIndex(\n                    (detail) => detail.path === item.path\n                ) === -1\n            ) {\n                setBreadcrumbList([item, ...breadcrumbList]);\n            }\n        });\n\n        const onCloseHanlde = (event: React.MouseEvent<HTMLElement>,index: number) => {\n            event.preventDefault();\n            //    console.log(breadcrumbList.splice(index, 1))\n            if(breadcrumbList[index].path === href.pathname) {\n                return\n            }\n\n            setBreadcrumbList((oldValue) => {\n                return oldValue.filter((_, i) => i !== index);\n            });\n        };\n\n        const onclickHandle = (item: $api.user.menuList) => {\n            navigate(item.path);\n        };\n\n        const tabList = breadcrumbList.map((item, index) => (\n            <Tag\n                key={item.path}\n                className={`${\n                    item.path === href.pathname ? style.tagActive : \"\"\n                }`}\n                style={{'cursor': \"pointer\"}}\n                closeIcon\n                onClick={() => onclickHandle(item)}\n                onClose={(e) => {\n                    onCloseHanlde(e, index);\n                }}\n            >\n                {item.name}\n            </Tag>\n        ));\n\n        return <>{tabList}</>;\n    }\n    return (\n        <>\n            <div className={`${style.tagWrap} flex w-full items-center`}>\n                <List />\n            </div>\n        </>\n    );\n}\n","import Hearder from './component/hearder'\nimport Siderbar from './component/siderbar'\nimport Tags from './component/tags'\nimport { Outlet } from \"react-router-dom\";\nimport style from \"./component/component.module.scss\";\n\nexport default function App() {\n    return <>\n        <Hearder />\n        \n        <div className='flex'>\n         <Siderbar />\n         <div className={`flex-1 min-w-0 ${style.contentWrap}`}>\n            <Tags />\n            <div className={style.Content}>\n              <Outlet />\n            </div>\n         </div>\n          \n        </div>\n        {/* <Spin\n        size=\"large\"\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100vh'\n        }}\n      /> */}\n    </>\n}"],"names":["App","dispatch","useAppDispatch","items","key","label","_jsx","className","onClick","loginOutHandle","Modal","confirm","okText","cancelText","okType","title","onOk","loginOut","children","_Fragment","_jsxs","concat","style","headerWrap","leftWrap","rightwrap","Dropdown","menu","imgblock","src","admin","alt","DownOutlined","Icon","props","icon","antIcon","AllIcon","React","toMakeTree","data","pid","arr","item","parentId","child","id","length","push","listSort","sortName","childName","tem","len","i","j","filterTreeList","list","json","detial","name","path","findOpenKey","parenList","openKeys","userInfo","useAppSelector","selectUserInfo","href","useLocation","navigate","useNavigate","selectedKeys","setSelectedKeys","useState","pathname","JSON","parse","stringify","collapsed","setCollapsed","silderWrap","with80","Menu","inlineCollapsed","theme","mode","onSelect","e","defaultSelectedKeys","defaultOpenKeys","iconArrow","toggleCollapsed","breadcrumbList","setBreadcrumbList","List","useEffect","_userInfo$list","find","findIndex","detail","tabList","map","index","Tag","tagActive","closeIcon","onclickHandle","onClose","onCloseHanlde","event","preventDefault","oldValue","filter","_","tagWrap","Hearder","Siderbar","contentWrap","Tags","Content","Outlet"],"sourceRoot":""}