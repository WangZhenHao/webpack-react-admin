{"version":3,"file":"static/js/952.ee486a3d.chunk.js","mappings":"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","sources":["components/global/pageLayout/index.tsx","components/global/pageTable/index.tsx","hooks/eventListener.ts","components/global/pages/index.tsx","views/system/roleList/index.tsx"],"sourcesContent":["import \"./index.scss\";\n\ninterface SoltProps {\n    header?: JSX.Element;\n    content?: JSX.Element;\n    footer?: JSX.Element;\n}\n\nexport default function App(props: SoltProps) {\n    const header = props.header ? (\n        <div className=\"page-layout_header\">\n            <div className=\"header-block\">{props.header}</div>\n        </div>\n    ) : null;\n\n    const content = props.content ? (\n        <div className=\"page-layout_table\">{props.content}</div>\n    ) : null;\n\n    const footer = props.footer ? (\n        <div className=\"page-layout_footer\">{props.footer}</div>\n    ) : null;\n\n    return (\n        <>\n            <div className=\"page-layout\">\n                {header}\n                {content}\n                {footer}\n            </div>\n        </>\n    );\n}\n","import { Table } from \"antd\";\nimport { useWindowListener } from \"@/hooks/eventListener\";\nimport type { TableProps } from \"antd\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { debounce } from \"@js/utils/index\";\n\ninterface typeProps {\n    table: TableProps<any>;\n    attribuate?: any;\n    heightAuto?: Boolean;\n    keyAuto?: Boolean\n}\nfunction addKey(list: any[]) {\n    let index = 0\n    return list.map((item) => {\n        item.key = index++\n\n        return item;\n    })\n}\nexport default function App(props: typeProps) {\n    const tableProps = props.table;\n    const heightAuto = typeof props.heightAuto === 'boolean' ? props.heightAuto : true;\n    const tableRef = useRef(null);\n    const keyAuto = typeof props.keyAuto === 'boolean' ? props.keyAuto : true;\n    \n    if(keyAuto) {\n        props.table.dataSource = addKey(JSON.parse(JSON.stringify(props.table.dataSource)))\n    }\n\n    const [scroll, setScroll] = useState({\n        scroll: props.table.scroll || {},\n    });\n\n    const rezieHandle = function (props: typeProps) {\n        if (heightAuto && !props.table.scroll?.y) {\n            const parentNode = (tableRef.current! as Element).parentElement;\n            const tableHeader = parentNode?.querySelector(\".ant-table-thead\");\n\n            if (parentNode && tableHeader) {\n                let y =\n                    parentNode!.getBoundingClientRect().height -\n                    tableHeader.getBoundingClientRect().height - 15;\n                \n                setScroll({\n                    scroll: {\n                        y,\n                        x: props.table.scroll?.x,\n                    },\n                });\n            }\n        }\n    };\n    // debugger\n\n    useEffect(() => {\n        rezieHandle(props);\n    }, [props]);\n\n    useWindowListener(\"resize\", debounce(rezieHandle, 100));\n    // let\n\n    return (\n        <>\n            <div ref={tableRef} className=\"h-full\">\n                <Table\n                    size=\"small\"\n                    bordered\n                    pagination={false}\n                    {...tableProps}\n                    {...scroll}\n                />\n            </div>\n        </>\n    );\n}\n","import { useEffect } from 'react';\n\nexport function useWindowListener(eventType: keyof WindowEventMap, listener: EventListenerOrEventListenerObject) {\n  useEffect(() => {\n    window.addEventListener(eventType, listener);\n    return () => {\n      window.removeEventListener(eventType, listener);\n    };\n  }, [eventType, listener]);\n}\n","import React from \"react\";\nimport PageLayout from \"../pageLayout\";\nimport PageTable from \"../pageTable\";\n// import { useEffect, useState } from \"react\";\nimport { ipost, iget } from \"@js/axios\";\nimport {\n    forwardRef,\n    useImperativeHandle,\n    useRef,\n    useState,\n    useEffect,\n} from \"react\";\n\nimport { Pagination } from 'antd'\n\n\ninterface typeProps {\n    attribute: {\n        url: string;\n        method?: \"get\" | \"post\";\n        reqeust?: boolean,\n        fromValue?: any;\n        showPage?: boolean\n    };\n    columns: $table.column[];\n    header?: any\n}\n\nexport interface typeRef {\n    getList: Function\n    init: Function\n}\n// class Pages extends React.Component {\n//     props: any = null;\n\n//     render(): React.ReactNode {\n//         return <PageLayout></PageLayout>;\n//     }\n// }\nfunction request(type: typeProps['attribute']['method']) {\n    const map = {\n        'get': iget,\n        'post': ipost\n    }\n    return map[type!]\n}\n\n\n\nexport default forwardRef((props: typeProps, ref) => {\n    const [list, setList] = useState([]);\n    const [page, setPage] = useState<$api.user.pageParmas>({});\n    let loading = useRef<boolean>(false)\n    const {\n        showPage,\n        method,\n        reqeust,\n        fromValue\n    } = props.attribute\n    const type = method || 'get';\n    const isReqeust = typeof reqeust === 'boolean' ? reqeust : true;\n    const isShowPage = typeof showPage === 'boolean' ? reqeust : true;\n    const params = fromValue || {};\n\n    const publicRef: typeRef = {\n        getList(){\n            \n            if(loading.current) return;\n\n            loading.current = true;\n            request(type)(props.attribute.url, params).then((res) => {\n                setList(res.result);\n                setPage(res.page || {})\n                loading.current = false;\n            })\n        },\n        init() {\n            params.page = 1;\n            publicRef.getList();\n        }\n    };\n\n    useImperativeHandle(ref, () => publicRef);\n\n    useEffect(() => {\n        if(isReqeust) {\n            publicRef.getList();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    \n    const footer = () => {\n        if(isShowPage) {\n            return <Pagination defaultCurrent={1} defaultPageSize={20} total={page.total} />;\n        }\n         \n    };\n    \n\n    return (\n        <PageLayout\n            header={props.header}\n            content={\n                <PageTable\n                    table={{ columns: props.columns, dataSource: list }}\n                ></PageTable>\n            }\n            footer={footer()}\n        ></PageLayout>\n    );\n});\n","import { getRoleList } from \"@api/system/roleList\";\nimport { useEffect, useState, useRef } from \"react\";\nimport PageLayout from \"@components/global/pageLayout\";\nimport { Form, Input, Button } from \"antd\";\nimport PageTable from \"@components/global/pageTable\";\nimport Pages from \"@components/global/pages\";\nimport type { typeRef } from \"@components/global/pages\";\n\n// type typeList = Awaited<ReturnType<typeof getRoleList>>[\"result\"];\n\nexport default function App() {\n    const childRef = useRef<typeRef>();\n    // useEffect(() => {\n    //     getMenuList().then((res) => {\n    //         setList(res.result);\n    //     });\n    // }, []);\n\n    const header = function() {\n        const onSearch = function() {\n            childRef.current?.init();\n        }\n        return (\n            <>\n                <Form layout=\"inline\">\n                    <Form.Item name=\"note\" label=\"菜单名称\">\n                        <Input />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button onClick={onSearch} type=\"primary\">搜索</Button>\n                    </Form.Item>\n                </Form>\n            </>\n        );\n    }\n\n    const col: $table.column[] = [\n        {\n            title: \"id\",\n            dataIndex: \"id\",\n            key: \"id\",\n        },\n        {\n            title: \"名称\",\n            dataIndex: \"name\",\n            key: \"name\",\n        },\n        {\n            title: \"角色代码\",\n            dataIndex: \"code\",\n            key: \"code\",\n        },\n        {\n            title: \"描述\",\n            dataIndex: \"description\",\n            key: \"description\",\n        },\n    ];\n\n    // const content = <>\n    //     <PageTable table={{\n    //         dataSource: list,\n    //         columns: col\n    //     }} />\n    // </>;\n\n    // return (\n    //     <>\n    //         <PageLayout header={header} content={content} />\n    //     </>\n    // );\n    return <>\n        <>\n            <Pages\n                ref={childRef}\n                header={header()}\n                columns={col}\n                attribute={{ url: \"/data/roleList.json\" }}\n            ></Pages>\n        </>\n    </>\n}\n"],"names":["App","props","header","_jsx","className","children","content","footer","_Fragment","_jsxs","tableProps","table","heightAuto","tableRef","useRef","keyAuto","dataSource","list","index","map","item","key","addKey","JSON","parse","stringify","scroll","setScroll","useState","rezieHandle","_props$table$scroll","y","parentNode","current","parentElement","tableHeader","querySelector","_props$table$scroll2","getBoundingClientRect","height","x","eventType","listener","useEffect","debounce","window","addEventListener","removeEventListener","ref","Table","size","bordered","pagination","forwardRef","setList","page","setPage","loading","showPage","method","reqeust","fromValue","attribute","type","isReqeust","isShowPage","params","publicRef","getList","iget","ipost","request","url","then","res","result","init","useImperativeHandle","PageLayout","PageTable","columns","Pagination","defaultCurrent","defaultPageSize","total","childRef","Pages","Form","layout","Item","name","label","Input","Button","onClick","_childRef$current","title","dataIndex"],"sourceRoot":""}