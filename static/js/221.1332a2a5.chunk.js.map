{"version":3,"file":"static/js/221.1332a2a5.chunk.js","mappings":"uJACA,SAAgB,UAAY,0B,sGCWb,SAASA,IACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GAEnCC,IADWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MAwBjB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAMC,UAAS,aAAYL,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mCAAkCF,SAAC,0CAGlDF,EAAAA,EAAAA,KAAA,OAAAE,UACIC,EAAAA,EAAAA,MAACK,EAAAA,EAAI,CACDC,KAAK,QACLC,cAAe,CACXC,SAAU,QACVC,SAAU,UAEdC,SAnCFC,IACdnB,GAAY,GACZE,GACIkB,EAAAA,EAAAA,IAAM,CACFC,OAAQF,EACRG,GAAIA,KACAtB,GAAY,EAAM,IAG7B,EA2BeuB,eAlBIC,IACpBC,QAAQC,IAAI,UAAWF,EAAU,EAkBjBG,aAAa,MAAKpB,SAAA,EAElBF,EAAAA,EAAAA,KAACQ,EAAAA,EAAKe,KAAI,CACNd,KAAK,WACLe,MAAO,CACH,CAAEC,UAAU,EAAMC,QAAS,yCAC7BxB,UAEFF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CACFC,QACI5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAY,CAACzB,UAAU,wBAE5B0B,YAAY,0BAGpB9B,EAAAA,EAAAA,KAACQ,EAAAA,EAAKe,KAAI,CACNd,KAAK,WACLe,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mCAAWxB,UAE9CF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMI,SAAQ,CACXH,QACI5B,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,CAAC5B,UAAU,wBAE5B0B,YAAY,oBAGpB9B,EAAAA,EAAAA,KAACQ,EAAAA,EAAKe,KAAI,CAAArB,UACNF,EAAAA,EAAAA,KAACiC,EAAAA,GAAM,CACH3B,MAAO,CAAE4B,MAAO,OAAQC,OAAQ,QAChCC,KAAK,UACLC,SAAS,SACTC,QAAS5C,EAASQ,SACrB,4BAS7B,C","sources":["webpack://webapck-react-admin/./src/views/login/index.module.scss?0727","views/login/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginWrap\":\"login_loginWrap__r6NJp\"};","import style from \"./index.module.scss\";\nimport { Button, Form, Input } from \"antd\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { userLoginIn } from \"@api/login\";\nimport { useAppDispatch } from \"@store/hooks\";\n\nimport { login } from \"@store/user\";\n\ntype typeLoginParmas = Parameters<typeof userLoginIn>[0];\n\nexport default function Login() {\n    const [loadings, setLoadings] = useState(false);\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n\n    const onFinish = (values: typeLoginParmas) => {\n        setLoadings(true);\n        dispatch(\n            login({\n                params: values,\n                cb: () => {\n                    setLoadings(false);\n                },\n            })\n        );\n        // userLoginIn(values).then(res => {\n        //     console.log(res)\n        //     setTimeout(() => {\n        //         setLoadings(false)\n        //         // navigate('/')\n        //     }, 2000)\n        // })\n    };\n    const onFinishFailed = (errorInfo: any) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    return (\n        <>\n            <div className={`${style.loginWrap} absolute`}>\n                <div className=\"text-center text-color-3 mb-10px\">\n                    后台管理系统\n                </div>\n                <div>\n                    <Form\n                        name=\"basic\"\n                        initialValues={{\n                            username: \"admin\",\n                            password: \"123456\",\n                        }}\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                        autoComplete=\"off\"\n                    >\n                        <Form.Item<typeLoginParmas>\n                            name=\"username\"\n                            rules={[\n                                { required: true, message: \"请输入用户名\" },\n                            ]}\n                        >\n                            <Input\n                                prefix={\n                                    <UserOutlined className=\"site-form-item-icon\" />\n                                }\n                                placeholder=\"用户名\"\n                            />\n                        </Form.Item>\n                        <Form.Item<typeLoginParmas>\n                            name=\"password\"\n                            rules={[{ required: true, message: \"请输入密码\" }]}\n                        >\n                            <Input.Password\n                                prefix={\n                                    <LockOutlined className=\"site-form-item-icon\" />\n                                }\n                                placeholder=\"密码\"\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button\n                                style={{ width: \"100%\", height: \"40px\" }}\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                loading={loadings}\n                            >\n                                登录\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        </>\n    );\n}\n"],"names":["Login","loadings","setLoadings","useState","dispatch","useNavigate","useAppDispatch","_jsx","_Fragment","children","_jsxs","className","concat","style","loginWrap","Form","name","initialValues","username","password","onFinish","values","login","params","cb","onFinishFailed","errorInfo","console","log","autoComplete","Item","rules","required","message","Input","prefix","UserOutlined","placeholder","Password","LockOutlined","Button","width","height","type","htmlType","loading"],"sourceRoot":""}