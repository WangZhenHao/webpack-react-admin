{"version":3,"file":"static/js/632.3b1c58e1.chunk.js","mappings":"4MAOA,MAmGA,EAnGmBA,KACf,IAAIC,EAwCJ,SAASC,IACL,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAE3BC,GAAiBC,EAAAA,EAAAA,KAAUC,KAE7BC,EAAAA,EAAAA,IAAM,iDAAkD,CACpDC,QAASF,EACTG,IAAK,sCACLC,OAAQ,UACTC,MAAMC,IACa,IAAfA,EAAIC,QACHX,EAAQU,EAAIE,KAChB,GACF,GACH,KAaH,OACIC,EAAAA,EAAAA,KAAA,OACIC,UAAU,8BACVC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,GAAIC,OAAQ,KAAOC,UAGhDN,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACHC,SAAUnB,EACVoB,SApBWC,CAACC,EAAYC,KAChC,MACMC,EADY3B,EAAK4B,MAAMC,GAAcA,EAAKJ,KAAOA,IACjCE,SAEtB7B,EAAIgC,UAAUH,EAAS,EAiBfZ,UAAU,SACVgB,YAAU,EACVC,aAAcA,KAAM,EAAKZ,SAGrBpB,EAAKF,KAAK+B,IACCf,EAAAA,EAAAA,KAACO,EAAAA,EAAOY,OAAM,CAAeC,MAAOL,EAAKJ,GAAGL,SAAGS,EAAKM,SAAhCN,EAAKJ,SAOxD,CACA,OAzFAW,EAAAA,EAAAA,YAAU,KACN,WACItC,EAAM,IAAIuC,KAAKC,IAAI,YAAa,CAC5BC,KAAM,GACNC,OAAQ,IAAIH,KAAKI,OAAO,UAAW,YACnCC,YAAY,EACZC,iBAAiB,IAGrB,IAAIC,EAAU,IAAIP,KAAKQ,aAAa,CAChC/C,IAAKA,IAGLgD,EAAS,IAAIT,KAAKU,MAAMC,eAAe,CACvClD,IAAKA,EACLmD,YAAa,CACT,CACIC,QAASN,EACTnB,GAAI,aAGZ0B,WAAYd,KAAKU,MAAMK,UAAUC,cAAcC,KAC/CC,gBAAiB,WACjBC,YAAY,EACxBC,WAAW,IAGHX,EAAOY,GAAG,iBAAkBC,IACxBC,QAAQC,IAAIF,GACZb,EAAOgB,cAAczB,KAAKU,MAAMK,UAAUC,cAAcU,UACxDjB,EAAOkB,QAAQ,GAEvB,CACAC,GACO,KACHnE,GAAOA,EAAIoE,SAAS,IAEzB,KAqDCC,EAAAA,EAAAA,MAAA,OAAKpD,UAAU,kBAAiBK,SAAA,EAC5BN,EAAAA,EAAAA,KAAA,OAAKW,GAAG,eACRX,EAAAA,EAAAA,KAACf,EAAU,MACT,C","sources":["views/operation/areaList.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { Select } from \"antd\";\nimport { jsonp } from \"@/assets/js/axios\";\nimport { debounce } from \"@/assets/js/utils\";\n\n// 参考案例： https://lbs.qq.com/demoList/glAPI#%E4%B8%AA%E6%80%A7%E5%8C%96%E5%9C%B0%E5%9B%BE\n// https://lbs.qq.com/webDemoCenter/glAPI/glEditor/toolDraw\nconst AreaCreate = () => {\n    var map: any;\n    useEffect(() => {\n        function initMap() {\n            map = new TMap.Map(\"container\", {\n                zoom: 16, // 设置地图缩放级别\n                center: new TMap.LatLng(39.984104, 116.307503), // 设置地图中心点坐标\n                scrollable: false,\n                doubleClickZoom: false\n            });\n\n            var polygon = new TMap.MultiPolygon({\n                map: map,\n            });\n\n            var editor = new TMap.tools.GeometryEditor({\n                map: map, // 编辑器绑定的地图对象\n                overlayList: [\n                    {\n                        overlay: polygon,\n                        id: \"polyline\",\n                    },\n                ],\n                actionMode: TMap.tools.constants.EDITOR_ACTION.DRAW,\n                activeOverlayId: \"polyline\", // 激活图层\n                selectable: true, // 开启点选功能\n\t\t\t\tsnappable: true // 开启吸附\n            });\n\n            editor.on(\"draw_complete\", (geometry: any) => {\n                console.log(geometry);\n                editor.setActionMode(TMap.tools.constants.EDITOR_ACTION.INTERACT)\n                editor.enable()\n            });\n        }\n        initMap();\n        return () => {\n            map && map.destroy();\n        };\n    }, []);\n\n    function SearchArea() {\n        const [list, setList] = useState([])\n        \n        const onSearchHandle = debounce((query: string) => {\n            // console.log(query);\n            jsonp('https://apis.map.qq.com/ws/place/v1/suggestion', {\n                keyword: query,\n                key: '7LVBZ-LDH3S-PXSOG-6XRG5-APHYH-JVBIS',\n                output: 'jsonp',\n            }).then((res: any) => {\n                if(res.status === 0) {\n                    setList(res.data)\n                }\n            })\n        }, 1000);\n        const onSelectHandle = (id: string, option: any) => {\n            const item: any = list.find((item: any) => item.id === id)\n            const location = item.location;\n\n            map.setCenter(location)\n\n        }\n        // const inputHandle: React.ChangeEventHandler<HTMLInputElement> = (\n        //     value\n        // ) => {\n        //     console.log(value);\n        // };\n        return (\n            <div\n                className=\"absolute left-10px top-10px\"\n                style={{ width: 520, height: 42, zIndex: 2000 }}\n            >\n                {/* <Input onChange={inputHandle} placeholder=\"请输入地址提示\" /> */}\n                <Select\n                    onSearch={onSearchHandle}\n                    onSelect={onSelectHandle}\n                    className=\"w-full\"\n                    showSearch\n                    filterOption={() => true}\n                >\n                    {\n                        list.map((item: any) => {\n                            return <Select.Option key={item.id} value={item.id}>{ item.address }</Select.Option>\n                        })\n                    }\n                    \n                </Select>\n            </div>\n        );\n    }\n    return (\n        <div className=\"h-full relative\">\n            <div id=\"container\"></div>\n            <SearchArea />\n        </div>\n    );\n};\n\nexport default AreaCreate;\n"],"names":["AreaCreate","map","SearchArea","list","setList","useState","onSearchHandle","debounce","query","jsonp","keyword","key","output","then","res","status","data","_jsx","className","style","width","height","zIndex","children","Select","onSearch","onSelect","onSelectHandle","id","option","location","find","item","setCenter","showSearch","filterOption","Option","value","address","useEffect","TMap","Map","zoom","center","LatLng","scrollable","doubleClickZoom","polygon","MultiPolygon","editor","tools","GeometryEditor","overlayList","overlay","actionMode","constants","EDITOR_ACTION","DRAW","activeOverlayId","selectable","snappable","on","geometry","console","log","setActionMode","INTERACT","enable","initMap","destroy","_jsxs"],"sourceRoot":""}